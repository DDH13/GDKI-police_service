openapi: 3.0.1
info:
  title: Police
  version: 0.1.0
servers:
- url: "{server}:{port}/police"
  variables:
    server:
      default: http://localhost
    port:
      default: "8080"
paths:
  /requests:
    get:
      operationId: getRequests
      parameters:
      - name: status
        in: query
        schema:
          type: string
          default: ""
      - name: gid
        in: query
        schema:
          type: string
          default: ""
      - name: rlimit
        in: query
        schema:
          type: integer
          format: int64
          default: 10000
      - name: offset
        in: query
        schema:
          type: integer
          format: int64
          default: 0
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PoliceRequest'
        "202":
          description: Accepted
        "400":
          description: BadRequest
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    post:
      operationId: postRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPoliceRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliceRequest'
        "202":
          description: Accepted
        "400":
          description: BadRequest
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /requests/{id}:
    get:
      operationId: getRequestsId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliceRequest'
        "202":
          description: Accepted
        "400":
          description: BadRequest
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
    delete:
      operationId: deleteRequestsId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        "202":
          description: Accepted
        "400":
          description: BadRequest
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /requests/nic/{nic}:
    get:
      operationId: getRequestsNicNic
      parameters:
      - name: nic
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PoliceRequest'
        "202":
          description: Accepted
        "400":
          description: BadRequest
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    ErrorPayload:
      type: object
      properties:
        reason:
          type: string
          description: Reason phrase
        path:
          type: string
          description: Request path
        method:
          type: string
          description: Method type of the request
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          description: Timestamp of the error
        status:
          type: integer
          description: Relevant HTTP status code
          format: int32
    NewPoliceRequest:
      required:
      - gid
      - nic
      - reason
      type: object
      properties:
        gid:
          type: string
        reason:
          type: string
        nic:
          type: string
    Utc:
      type: array
      items:
        oneOf:
        - type: integer
          format: int64
        - type: number
          format: double
    PoliceRequest:
      required:
      - appliedTime
      - citizenId
      - gid
      - id
      - reason
      - status
      type: object
      properties:
        id:
          type: string
        citizenId:
          type: string
        status:
          type: string
        reason:
          type: string
          nullable: true
        gid:
          type: string
        appliedTime:
          $ref: '#/components/schemas/Utc'
